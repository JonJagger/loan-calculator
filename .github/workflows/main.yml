# This is a basic workflow to help you get started with Actions

name: Master Pipeline

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2


      - name: Make Docker image name available for following steps
        id: tagged_image
        run: |
          echo ::set-output name=value::merkely/loancalculator:$(git log -1 --pretty=%h)


      - name: Build and Publish Docker Image
        env:
          DOCKER_DEPLOY_TOKEN: ${{ secrets.DOCKER_DEPLOY_TOKEN }}
          DOCKER_DEPLOY_USERNAME: ${{ secrets.DOCKER_DEPLOY_USERNAME }}
        run: |
          make build
          make docker_login
          make docker_push


      - name: Declare Merkely Pipeline
        env:
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
        run: |
          make merkely_declare_pipeline


      - name: Log Docker Image to Merkely
        env:
          TAGGED_IMAGE: ${{ steps.tagged_image.outputs.value }}
          MERKELY_FINGERPRINT: docker://${TAGGED_IMAGE}
          MERKELY_ARTIFACT_GIT_URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}
          MERKELY_ARTIFACT_GIT_COMMIT: ${GITHUB_SHA}
          MERKELY_CI_BUILD_URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          MERKELY_CI_BUILD_NUMBER: ${GITHUB_RUN_ID}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
        run: |
          make merkely_log_artifact


      - name: Run test suite and log test results to Merkely
        env:
          TAGGED_IMAGE: ${{ steps.tagged_image.outputs.value }}
          MERKELY_FINGERPRINT: docker://${TAGGED_IMAGE}
          MERKELY_EVIDENCE_TYPE: unit_test
          MERKELY_TEST_RESULTS_FILE: build/test/pytest_unit.xml
          MERKELY_CI_BUILD_URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
        run: |
          # Run the test suite and write results to build/test/pytest_unit.xml
          make test
          # Log test results to Merkely
          make merkely_log_test


      - name: Run security analysis and log results summary to Merkely
        env:
          TAGGED_IMAGE: ${{ steps.tagged_image.outputs.value }}
          MERKELY_FINGERPRINT: docker://${TAGGED_IMAGE}
          MERKELY_EVIDENCE_TYPE: security
          MERKELY_TEST_RESULTS_FILE: build/security/security.xml
          MERKELY_CI_BUILD_URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
        run: |
          make security
          make merkely_log_test


      - name: Run coverage and log summary to Merkely
        env:
          TAGGED_IMAGE: ${{ steps.tagged_image.outputs.value }}
          MERKELY_FINGERPRINT: docker://${TAGGED_IMAGE}
          MERKELY_EVIDENCE_TYPE: coverage
          MERKELY_IS_COMPLIANT: 'TRUE'
          MERKELY_CI_BUILD_URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
        run: |
          # Write coverage summary to build/coverage/coverage_summary.sh
          make coverage
          # Put coverage summary into MERKELY_DESCRIPTION env-var
          source build/coverage/coverage_summary.sh
          export MERKELY_DESCRIPTION="${COVERAGE_SUMMARY}"
          # Log coverage summary to Merkely
          make merkely_log_evidence


      - name: Deploy to STAGE and log deployment to Merkely
        env:
          TAGGED_IMAGE: ${{ steps.tagged_image.outputs.value }}
          MERKELY_FINGERPRINT: docker://${TAGGED_IMAGE}
          MERKELY_ENVIRONMENT: staging
          MERKELY_DESCRIPTION: "Deployed to ${MERKELY_ENVIRONMENT} in pipeline"
          MERKELY_CI_BUILD_URL: ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}
          MERKELY_API_TOKEN: ${{ secrets.MERKELY_API_TOKEN }}
        run: |
          echo YOUR DEPLOYMENT COMMAND HERE
          make merkely_log_deployment
